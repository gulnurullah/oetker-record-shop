#security:
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        users_in_memory: { memory: null }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: lazy
#            provider: users_in_memory
#
#            # activate different ways to authenticate
#            # https://symfony.com/doc/current/security.html#firewalls-authentication
#
#            # https://symfony.com/doc/current/security/impersonating_user.html
#            # switch_user: true
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#    access_control:
#        # - { path: ^/admin, roles: ROLE_ADMIN }
#        # - { path: ^/profile, roles: ROLE_USER }


security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: pbkdf2
            hash_algorithm: sha512
            encode_as_base64: true
            iterations: 100
            key_length: 40
    providers:
        in_memory:
            memory:
                users:
                    admin:
                        password: '%admin_password%'
                        roles: ROLE_ADMIN

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        docu:
            pattern: ^/api/docu
            security: false
        main:
            pattern: ^/
            anonymous: ~
            provider: in_memory
            http_basic:
                realm: "Oetker Shop"
    access_control:
        - { path: ^/api, roles: ROLE_ADMIN }
